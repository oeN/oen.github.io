[{"content":"The other night I was wandering around my homelab and noticed that my new home assistant instance wasn\u0026rsquo;t properly exposed to the internet. Some months ago home assistant (from now on HA) found its new permanent home, a Rasperry PI 4 4GB; since we\u0026rsquo;re in lockdown I didn\u0026rsquo;t need to reach HA outside my local network.\nI\u0026rsquo;m still working from home (and love it) but it\u0026rsquo;s time to fix this now. While choosing which method was the best to expose it, I had an idea, why not use an Ingress in my Kubernetes cluster?\nIt could seem a little odd, but hear me out:\n I already have a Kubernetes cluster, with cert-manager configured and working I\u0026rsquo;m planning to move some service into the cluster and they\u0026rsquo;ll need to reach HA anyway I want to learn as much as I can about Kubernetes and this seemed a good chance  So, in order to achieve my goal, I basically need one thing how I can point a Kubernetes Service to an external resource?\nWait, why a Service? Didn\u0026rsquo;t you mention an Ingress before? Yes, you\u0026rsquo;re right but bear with me.\nIn Kubernetes, an Ingress needs a service where to redirect all the requests it receives, so in order to properly expose HA with an Ingress, we need to create a Service that can point to it.\nUsually, a Service is used to expose a set of Pods that runs an application, in this way if other applications need to talk to each other they don\u0026rsquo;t need to use their pod names (that could change in a various way) but they can simply use the Service name.\nWhen we create a Service another resource is automatically created, an Endpoint, and this endpoint includes the references (all the IP addresses) of the Pods that match the selector we\u0026rsquo;ve specified in the Service selector spec.\nThe Endpoint created in this way will have the same name as the Service we\u0026rsquo;ve created.\nBut here\u0026rsquo;s the thing, we can create a Service without a selector and if we do that we also need to create an Endpoint ourselves and this endpoint could point to an IP outside the Kubernetes cluster.\nSo let\u0026rsquo;s see the YAML we need to create in order to properly expose HA using a Kubernetes Ingress.\nendpoint.yml\napiVersion: v1 kind: Endpoints metadata: name: home-assistant subsets: - addresses: - ip: 1.1.1.1 # Insert your home-assistant IP here ports: - name: ha port: 8123 protocol: TCP service.yml\napiVersion: v1 kind: Service metadata: name: home-assistant spec: ports: - name: ha port: 80 protocol: TCP targetPort: 8123 type: ClusterIP clusterIP: None Note: we set the clusterIP property to None on purpose, this tells Kubernetes to not provide an IP to this Service, we don\u0026rsquo;t need it. A Service like this is know also as headless service.\ningress.yml\napiVersion: networking.k8s.io/v1beta1 kind: Ingress metadata: annotations: kubernetes.io/ingress.class: nginx cert-manager.io/cluster-issuer: \u0026#34;letsencrypt-prod\u0026#34; name: home-assistant spec: rules: - host: ha.awesome-domain.com # insert your domain here http: paths: - backend: serviceName: home-assistant servicePort: ha path: / tls: - hosts: - ha.awesome-domain.com # insert your domain here secretName: home-assistant-tls Now if we run kubectl apply -f ... for all these three file after cert-manager has finished its work, we\u0026rsquo;ll end with a domain with a valid certificate that points to our Home Assistant instance outside of Kubernetes.\nAnd remember that I told you that I want to move some service that uses HA inside my k8s cluster? Well, now all I have to do is deploy them and use home-assistant as the URL for HA instead of using the IP address.\nFor sake of completion, if you already have a local domain for your HA instance you can skip the creation of the Endpoint and use directly the Service\u0026rsquo;s externalName property.\n","permalink":"https://diomedet.com/posts/expose-an-external-resource-with-a-kubernetes-ingress/","summary":"The other night I was wandering around my homelab and noticed that my new home assistant instance wasn\u0026rsquo;t properly exposed to the internet. Some months ago home assistant (from now on HA) found its new permanent home, a Rasperry PI 4 4GB; since we\u0026rsquo;re in lockdown I didn\u0026rsquo;t need to reach HA outside my local network.\nI\u0026rsquo;m still working from home (and love it) but it\u0026rsquo;s time to fix this now.","title":"Expose an external resource with a Kubernetes Ingress"},{"content":"I\u0026rsquo;m not that good at talking about my self but I\u0026rsquo;ll try it anyway.\nDuring the years I\u0026rsquo;ve moved across several programming languages reaching the point where the language itself is not that important anymore, what\u0026rsquo;s matters are just the thoughts behind it.\nIn recent times I discover that I like more setting up the infrastructure where the code runs rather than writing the code myself, it feels like I can be useful for more people, any project needs good infrastructure to properly works.\nI\u0026rsquo;ve also started an homelab (once ready I\u0026rsquo;ll link the page of my actual homelab), right now is a little messy but is constantly improving, we can always improve in some way.\nThere are a lot of other things that I could say, but for this page, I\u0026rsquo;ll stop here, I have a complicated relationship with social networks so probably you can\u0026rsquo;t find me there; I\u0026rsquo;m trying to revive my Twitter account, but no promise :P but if you\u0026rsquo;re reading this page it means that my site is up and running and I should work on my blog, so just look at it and see if you find something interesting!\n","permalink":"https://diomedet.com/about/","summary":"about","title":"About Me"}]